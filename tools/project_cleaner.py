#!/usr/bin/env python
"""
‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ Amulet-AI ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backup
"""

import os
import shutil
from pathlib import Path

def main():
    """‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backup"""
    # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    files_to_backup = [
        # ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
        'advanced_multi_class_trainer.py',
        'advanced_training.log',
        'clean_storage.py',
        'evaluate_and_connect.py',
        'image_comparison.log',
        'image_comparison.py',
        'inspect_dataset.py',
        'run_app.bat',
        'run_comparison_app.bat',
        'run_streamlit_app.py',
        'run_amulet_system.py',
        'cleanup.py',
        'cleanup.bat',
        
        # README ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô
        'README_UPDATED.md',
        'README_IMPROVED.md',
        'README_CLEANUP.md',
        
        # ‡πÑ‡∏ü‡∏•‡πå Config ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô
        'config_simplified.json',
    ]
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backup ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
    backup_dir = os.path.join(os.getcwd(), 'backup')
    os.makedirs(backup_dir, exist_ok=True)
    
    # ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå
    for filename in files_to_backup:
        src_path = os.path.join(os.getcwd(), filename)
        dst_path = os.path.join(backup_dir, filename)
        
        if os.path.exists(src_path):
            try:
                shutil.move(src_path, dst_path)
                print(f"‚úì ‡∏¢‡πâ‡∏≤‡∏¢ {filename} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á backup/ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            except Exception as e:
                print(f"‚úó ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≤‡∏¢ {filename}: {e}")
        else:
            print(f"! ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {filename}")
    
    # ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î __pycache__
    for root, dirs, files in os.walk(os.getcwd()):
        for dir_name in dirs:
            if dir_name == '__pycache__':
                pycache_path = os.path.join(root, dir_name)
                try:
                    shutil.rmtree(pycache_path)
                    print(f"‚úì ‡∏•‡∏ö {pycache_path} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                except Exception as e:
                    print(f"‚úó ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö {pycache_path}: {e}")
    
    print("\n‚úÖ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    print("üìã ‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ:")
    print("   - run_system.py")
    print("   - config.json")
    print("   - requirements.txt")
    print("   - README.md")
    print("   - ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: frontend/, backend/, ai_models/, data_base/")

if __name__ == "__main__":
    print("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ...")
    main()
    print("\n‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
