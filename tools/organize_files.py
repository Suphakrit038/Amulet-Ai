#!/usr/bin/env python3
"""
Amulet-AI File Organizer Script
‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
"""

import os
import shutil
import sys
from pathlib import Path


def ensure_directory(dir_path):
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ"""
    Path(dir_path).mkdir(parents=True, exist_ok=True)
    print(f"‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå {dir_path}")


def move_file(src, dest):
    """‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å src ‡πÑ‡∏õ dest"""
    try:
        if not os.path.exists(src):
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {src}")
            return False
        
        if os.path.exists(dest):
            print(f"‚ö†Ô∏è ‡πÑ‡∏ü‡∏•‡πå {dest} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß - ‡∏Ç‡πâ‡∏≤‡∏°")
            return False
        
        shutil.move(src, dest)
        print(f"‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢ {src} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á {dest}")
        return True
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≤‡∏¢ {src}: {e}")
        return False


def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("=" * 60)
    print("üßπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Amulet-AI")
    print("=" * 60)
    
    base_dir = Path.cwd()
    print(f"üìÇ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å: {base_dir}")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    archive_dir = base_dir / "archive"
    ensure_directory(archive_dir)
    ensure_directory(archive_dir / "launchers")
    ensure_directory(archive_dir / "tests")
    ensure_directory(archive_dir / "configs")
    ensure_directory(archive_dir / "scripts")
    ensure_directory(archive_dir / "batches")
    
    # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå launchers
    launcher_files = [
        "launch_system.py", 
        "launch_complete_system.py", 
        "launch_real_ai_system.py", 
        "simple_launcher.py", 
        "start_amulet_system.py", 
        "quick_start.py",
        "start.py",
        "system_launcher.py"
    ]
    
    # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå tests
    test_files = [
        "test_api_connection.py", 
        "test_api_import.py", 
        "test_real_ai_system.py", 
        "test_simple.py", 
        "test_system.py", 
        "final_test.py", 
        "quick_test.py"
    ]
    
    # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå scripts
    script_files = [
        "cleanup_temp.py", 
        "fix_and_run_system.py", 
        "run_streamlit_fast.py", 
        "setup_complete_system.py", 
        "emergency_fix.py"
    ]
    
    # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå configs
    config_files = [
        "requirements_fixed.txt", 
        "README_NEW.md"
    ]
    
    # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå batch ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå batches
    batch_files = [
        "launch.bat", 
        "launch_real_ai_backend.bat", 
        "launch_real_ai_complete.bat", 
        "fix_streamlit.bat", 
        "run_streamlit_fast.bat", 
        "start_system.bat",
        "start_amulet_system.bat"
    ]
    
    # ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå launcher
    print("\nüöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå launcher...")
    for file in launcher_files:
        src = base_dir / file
        dest = archive_dir / "launchers" / file
        move_file(src, dest)
    
    # ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå test
    print("\nüß™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå test...")
    for file in test_files:
        src = base_dir / file
        dest = archive_dir / "tests" / file
        move_file(src, dest)
    
    # ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå script
    print("\nüìú ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå script...")
    for file in script_files:
        src = base_dir / file
        dest = archive_dir / "scripts" / file
        move_file(src, dest)
    
    # ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå config
    print("\n‚öôÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå config...")
    for file in config_files:
        src = base_dir / file
        dest = archive_dir / "configs" / file
        move_file(src, dest)
    
    # ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå batch
    print("\nüíª ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå batch...")
    for file in batch_files:
        src = base_dir / file
        dest = archive_dir / "batches" / file
        move_file(src, dest)
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏£‡∏π‡∏ó
    print("\nüìã ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏£‡∏π‡∏ó‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö:")
    root_files = [f for f in os.listdir(base_dir) if os.path.isfile(os.path.join(base_dir, f))]
    for file in sorted(root_files):
        print(f"  - {file}")
    
    print("\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÑ‡∏ü‡∏•‡πå")
    print("=" * 60)


if __name__ == "__main__":
    main()
